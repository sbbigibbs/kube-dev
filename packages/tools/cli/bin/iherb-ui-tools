#!/usr/bin/env node
var spawn = require('child_process').spawn

spawner(__dirname + '/../lib/app.js')

function spawner(app) {
  var args = [ app ]

  process.argv.slice(2).forEach(function (arg) {
    var flag = arg.split('=')[0]

    switch (flag) {
      case '-d':
        args.unshift('--debug')
        break
      case 'debug':
      case '--debug':
      case '--debug-brk':
        args.unshift(arg)
        break
      case '-gc':
      case '--expose-gc':
        args.unshift('--expose-gc')
        break
      default:
        if (arg.indexOf('--trace') === 0) args.unshift(arg)
        else args.push(arg)
        break
    }
  })

  var proc = spawn(process.argv[0], args, { stdio: 'inherit' })
  proc.on('exit', function (code, signal) {
    process.on('exit', function () {
      if (signal)
        process.kill(process.pid, signal)
      else
        process.exit(code)
    })
  })

  // terminate children.
  process.on('SIGINT', function () {
    proc.kill('SIGINT') // calls runner.abort()
    proc.kill('SIGTERM') // if that didn't work, we're probably in an infinite loop, so make it die.
    process.kill(process.pid, 'SIGINT')
  })
}
